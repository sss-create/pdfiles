--d3 $ outside 4 (repeatCycles 4) 
d3 $ repeatCycles 1
  $ struct("t(8,8)") $ n (choose [0,2,8]) 
  # s "ch"
  # amp 1

resetCycles

-- not sending....
d3 $ outside 4 (repeatCycles 4) $ n (choose [0,3,7]) 
--d3 $ repeatCycles 4 $ n (irand 1)
  # s "ch" 
  # amp 1
  # nudge (chooseBy "1 0.2 0.4 0.2" [0.01, 0.3, 0.07, 0.46])

-- print: list dirt play _id_ 3 amp 1 cps 0.5625 cycle 306.5 delta 0.444444 n -3 orbit 2 s juju
d3 $ n "a5 a4!3"
  # amp 1
  # s "juju"

-- not sending...
d3 $ every 1 (# s "ch") $ n (choose [0,2,8])
  # amp 1

--d3 $ every 2 (\x -> x |+ n "24") $ n "f3 gs3 c4"
d3 $ segment 16 $ fastGap 2 $ every 2 (rev . (\x -> (x |+ n "<12 5>"))) 
  $ linger 0.75 . fastGap 2
  $ n "~ f3*2 [ds2|cs3|gs4]"
  # s "mydevice"
  # amp 1

-- |> tut
-- https://tidalcycles.org/docs/patternlib/tutorials/course1/
-- of '2', for example:
d3 $ every 2 qt $ sound "cp*2" # speed (wchoose [(2, 4), (-2, 2)])

hush

d3 $ n (wchoose [(0, 8), (6, 0.5), (4, 1)])
  # s "mydevice" 
  # amp 1


-- ?? get repetition?
d2 $ struct "t(6,12)" $ fast 4 $ every 1 (rotR 1 . qt) $ s "mydevice" 
  # n (wchoose [(0, 8), (6, 5), (4, 9)])
  # s "furthrrr"
  # amp 1

d3 $ every 2 rev $ n (wchoose [(0, 8), (6, 0.5), (4, 1)])
  # s "mydevice"

hush

d3 $ segment 16 $ every 4 (rot 2) $ n ("~ f3!4 . f2 c4 . <f2 f3*2>" |- 12)
  # s "eur"
  # amp rand

-- MARKOV
-- Define a simple Markov chain for a melody using MIDI note names
-- d1 $ n (choose [48, 50, 52]) $ markovPat 8 1 [[2,1,1], [1,2,2], [2,2,1]]
--  # s "mydevice"

-- stack errors!
-- d1 $ s "mydevice" # n (fmap ([0,3,5]!!) $ markovPat 8 3 [[3,5,2], [4,4,2], [0,1,0]])
-- 
-- d1 $ slow 4
--   $ n (fmap (\x -> [0, 3, 5] !! (x `mod` 3)) $ markovPat 5 99 [[3, 59, 2], [4, 4, 2], [0, 1, 0]])
--   # s "mydevice" 

hush

d2 $ every 2 (slow 2) $ fast 2
  $ n (cat [scale "minor" "~@4 7 ~@2 <9 <0 1>>", scale "minor" "~@3 <0 9 12>"])
  # s "mydevice"
  # nudge (chooseBy "0 0.25 0.5 0.33" [0, 0.08, 0.03])

d2 $ segment 16 $ every 2 (fastGap "<2 4>")
  $ n (cat [scale "minor" "~ <0 0 [0 9 9]> 1 <4 6 7> 2", scale "minor" "~ 0*2"])
  # s "mydevice"
  # amp 1

-- 16tel
d1 $ n "f7!16"
  # s "mydevice"
  -- # nudge (chooseBy "0 0.25 0.5 0.33" [0, 0.01, 0.03])

d1 $ n "f1*4"
  # amp 1
  # s "bass"


d2 $ n "7 0!3"
  # amp 1
  # s "cp"

-- how to make -12 when chooseBy is 5?
d2 $ fast (chooseBy (perlin) [5,4,2]) $ n "f3 gs3 c3" 
  # s "chord"
  # nudge (chooseBy "0 0.25 0.5 1" [0.15, 0.12, 0.13])

resetCycles

-- when
d3 $ when ((elem '2').show) (fast 4) $ n "f3"
  # s "chord"
  # amp 1

hush




------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
--------------------------------------------------------------------------DRUMS

-- kicks
d3 $ "bd:18*4"

d3 $ "bd bd hh cp"

d3 $ segment 16 $ fast "1 2 3" $ s "bd cp"

d3 $ fastSqueeze "2 0.5 8" $ s "bd cp"

-- off hat
d2 $ "[~ hh:49]*4"

-- clap
d4 $ "[~ cp:5]*2"


hush

resetCycles

