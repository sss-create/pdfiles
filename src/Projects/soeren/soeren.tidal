{--
#X array ph-cal 127 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1114 0.1195 0.1282 0.1366
0.145 0.1537 0.1621 0.1702 0.1789 0.187 0.1954 0.2044 0.2128 0.2209 0.2296 0.238
0.2464 0.2548 0.2632 0.2716 0.2803 0.2884 0.2968 0.3055 0.3139 0.322 0.3307
0.3391 0.3475 0.3559 0.3643 0.3727 0.3814 0.3895 0.3979 0.4063 0.415 0.4231
0.4318 0.4399 0.4486 0.457 0.4654 0.4738 0.4822 0.4906 0.4993 0.5074 0.5158
0.5242 0.5329 0.541 0.5497 0.5581 0.5665 0.5749 0.5833 0.5914 0.6004 0.6088
0.6169 0.6256 0.634 0.6424 0.6508 0.6592 0.6673 0.676 0.6844 0.6928 0.7012
0.7096 0.718 0.7267 0.7348 0.7432 0.7516 0.76 0.7684 0.7771 0.7852 0.7939 0.9325
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 127 -1 200 140 1 0 0;
#X restore 1330 88 graph;
#X obj 219 200 tabread ph-cal;
--}

--------------------------------------------------------------------------------
-------------------------------------------------------------------------------0
setcps (128/60/4)

setcps (28/60/4)

-- sync test
d1 $ n "a5 a4!3"
  # amp 1
  # s "piston honda"

d2 $ n "a5 a4!3"
  # amp 1
  # s "furthrrrr"

d3 $ n "a5 a4!3"
  # amp 1
  # s "juju"

hush

d2 $ silence




--------------------------------------------------------------------------------
-------------------------------------------------------------------------------1
-- bass line: f, d#, c
-- d1 $ n "~@2 f4 . ds3 f3 . <gs3!3 ds3>"
d1 $ struct "t(11,16)" $ n "f2 . ds2 f3 gs2 ~ . c2!2"
  # amp 1
  # s "PISTON"
  # nudge ((slow 4 (perlin*5)) * (choose [0.0015, 0.002, 0.001]))

d2 $ struct "t(11,16)" $ (n "f2 . ds2 f3 gs3 ~ . c2!2" |+ n (12))
  # amp 1
  # s "FURTHRRRR"
  # nudge ((slow 4 (perlin*5)) * (choose [0.002, 0.003, 0.001]))

d3 $ slow 4 $ n "~!7 f4'min"
  # s "CHORD"
  # amp 1

-- chord 2
-- wrong sequence
-- d3 $ append (n "f3'min!2 ~@2 <f3'min f3'min!2>") 
--             (n "f3'min!2 ~@2 <f2'min f2'min [f3'min ~ f3'min] f3'min>")
--   # s "juju"
--   # amp 1

hush




--------------------------------------------------------------------------------
-------------------------------------------------------------------------------2
-- track 2b ass line: f, g#, c

d2 $ struct "t(7,16)" $ n "f2*2 ~ f2?0.7 f2*3"
  # s "FURTHRRRR"
  # amp (min 0.2 (abs $ rand))

-- todo: off grid
d1 $ segment 8 $ (every 2 (slow 2)) 
-- $ n ("f3 gs2. gs3 ds5 f6 ds6 . c3*2" |- 12))
  $ n "[c3 f4 g2 c4] ~ f4*2 gs4" - 12
  # s "PISTON HONDA"
  # amp perlin

-- long attack/decay
d3 $ slow 2 $ n "~ f2'min!2 ~ "
  # amp 1
  # s "chord"
  # nudge 0.2

hush




--------------------------------------------------------------------------------
-------------------------------------------------------------------------------3
-- bass line: f, c, gs, ds
-- d2 $ segment 16 
--   $ every 4 (shuffle 2 . slow 2 . segment 16 . (|+ n 12)) 
--   $ n ("~ [f2 ~] [gs2 f3] f2 <c2 [gs2 f3]> ~@3" |- 12)
d1 $ every 4 (shuffle 2 . slow 2 . segment 16 . (|+ n 12)) 
  $ n ("~ [f2 ~] [f2 f3] f2 <f2 [f2 f3]> ~@3" |- 12)
  # amp 1
  # s "piston honda"

d2 $ every 4 (shuffle 2 . slow 2 . segment 16 . (|+ n 12)) 
  $ n ("~ [f2 ~] [f2 f3] f2 <f2 [f2 f3]> ~@3" |- 12)
  # amp 1
  # s "FURTHRRRR"

-- d2 $ struct "t(6,16)" $ every 16 (ply 2 .fast 2) 
-- d2 $ every 16 (ply 2 .fast 2) 
-- d3 $ segment 16 $ every 16 (ply 2) $ every 4 (|+ n "[5|0]")
--   $ n "~@3 f2'min ~!2 . f2'min ~ . ~ f2'min ~@2" 
--   # s "chord"
--   # amp 1 

hush 




--------------------------------------------------------------------------------
-------------------------------------------------------------------------------4 
-- KEEP MOVING
-- f, d#, a#

-- F4 TO DS6!! -- ph -12 if needed
let dascale = "melodicMajor"; chord = "'min"; melo = "0 4 6 3"; root = "f3 f4";
in d1 $ slow 2 $ struct "t(<9 7 11 7>,16)" 
  $ every 2 (slow 2) $ n (scale dascale (melo) + root) # s "chord"
  # amp perlin
  # s "PISTON"

let dascale = "melodicMajor"; chord = "'min"; melo = "0 4 6 3"; root = "f3 f4";
in d2 $ slow 2 $ struct "t(<9 7 11 7>,16)" 
  $ every 2 (slow 2) $ n (scale dascale (melo) + root) # s "chord"
  # amp 1
  # s "furthrrr"

hush




--------------------------------------------------------------------------------
-------------------------------------------------------------------------------5
-- f, d#,g#
-- 

-- VERY HIGH NOTES!!
d1 $ struct "t(7, 16)" $ fast 2 
  $ n ("c4 . <~ f6*2> f5 . f7 f7 . [gs6|c6]@2" - "<12 24 48>")
  # s "PISTON"
  # amp rand
  # nudge ((tri+rand) * 0.0001)

d2 $ struct "t(7, 16)" $ fast 2 
  $ n ("c6 . <~ f6*2> f6 . f7 f7 . [gs6|c6]@2" - 48)
  # s "PISTON"
  # amp rand
  # nudge ((tri+rand) * 0.0002)

hush




--------------------------------------------------------------------------------
-------------------------------------------------------------------------EYES ON
-- eb, f, c#
-- d2 $ n ("ef4'min!2 ~@2 <ef3'min af3'min df3'min!2>" 

d2 $ every 4 (|- n 12) $ n "ef2!2 ~@2 <ef1 af2 df1!2>"
  # s "furnthrrr"
  # amp rand 

-- dubby, env mod
d1 $ struct "t(<11 8 12 8>,16)" 
  $ n "~ <ef2!2 bf2!2> ~@2 ef2*2 ~ <ef2 bf2> ef1 bf1!2" 
  # s "ph"
  # nudge ((tri+perlin) * 0.011)
  # amp rand 

-- OPTIONAL
d3 $ n "ef3'min!2 ~@ <ef2'min af3'min df3'min!2>/4" 
  # s "chord"
  # amp rand 

hush




--------------------------------------------------------------------------------
-------------------------------------------------------------------------------7
-- bass line: f, d#, c

d1 $ segment 16 $ slow 4 
  $ every 2 (fast 2 . linger 0.2 . ply 2) $ struct "t(5,16)" 
  $ n ("<f3 f4> [c4|f3] ~ ds3*3" |- 24)
  # s "PISTON"
  # amp perlin
  -- # amp "0.1 0.2"


-- MUST HAVE
-- for G: no FilterENV, low dubby, ATTACK!!
d3 $ segment 16 $ every 2 (linger 0.4 . bite 4 "2 <0 3> 1 3")
  $ fastGap 4 . slow 2 
  $ n "f2'min . f2'min ~ . [f2'min|c2'min|ds2'min] <gs2'min7 ~> . ~@2"
  # s "mydevice"
  # amp "0.1 0.2"
  # nudge ((slow 4 (perlin*5)) * (choose [0.002, -0.001]))

-- 2
d2 $ segment 16 $ every 3 (scramble 2) $ struct "t(<9 7>,32)"
  $ note "<f2*4 ds3*4> ~ f2*4 gs2*4 c2*4" 
  # nudge (chooseBy (tri*1.3) (map (* 0.0001) [12, 29, 87, 45]))
  # s "FURTHRRR" 
  # amp perlin

hush




--------------------------------------------------------------------------------
-------------------------------------------------------------------------------8
-- bass line: f, d#, g#, bf
-- GOERAN IMPRO PART

-- MELODY HEAVY! Little more attack
d1 $ slow 2 $ struct "t(<12 13 17 18>,32)"
  $ every 4 ((|+ n (chooseBy (perlin) [5,12])) . linger 0.5)
  $ slow 2 
  $ rot (chooseBy (perlin) [2,4,2]) $ n "f2 ~ . <bf2 c3> gs2 . f2"
  # s "PISTON"
  # amp rand
  # nudge ((slow 4 (perlin*3)) * (choose [0.002, -0.001]))

d2 $ fastCat [n "<f3!2 f3*3 f3> c2", n ("<ds2 f2> f2 ~ <gs2!3 bf2*3>" |+ 12)]
  # s "FURTHRRRR"
  # amp rand

d3 $ fastCat [n "<f3'min ~*4> ~", n ("f3'min9 ~ ~ ~!3" |+ 12)]
  # s "chord"
  # amp rand

hush




--------------------------------------------------------------------------------
-------------------------------------------------------------------------------9
-- bass line: f, d#, g#, bf

-- could be long
d1 $ segment 16 $  every 2 (rev . (\x -> (x |- n "<12 4>"))) 
  $ slow 2 $ linger 0.75 . fastGap 2
  $ n "~ f3*2 [c4|c3|gs4]" 
  # s "piston"
  # amp 1

d2 $ segment 16 $  every 2 (rev . (\x -> (x |- n "<12 4>"))) 
  $ slow 2 $ linger 0.75 . fastGap 2
  $ n "~ f3*2 [c4|c3|gs4]" 
  # s "FURHT"
  # amp 1

d3 $ fastCat [n "<f3'min ~*4> ~", n ("f3'min9 ~ ~ ~!3" |+ 12)]
  # s "chord"
  # amp rand

-- d3 $ every 3 (scramble 2 . ply 1.5) $ n (cat ["f2*3 ds3", "[f2*2|gs2*4]"])
--  # s "mydevice"
--  # amp 1 

hush



--------------------------------------------------------------------------------
------------------------------------------------------------------------------10 

-- LPG POSITION 1!
do
  let dascale = "hirajoshi"; chord = "'min"; melo = "0 3 5 1 -3"; root = "f3 f4" 
  d2 $ struct "t(<9 7 11 7>,16)" 
    $ every 2 (slow 2) $ n (scale dascale (melo - 12) + root) # s "chord"
    # amp 1
    # s "FURTHRRRRR"
  d1 $ struct "t(<9 7 11 7>,16)" 
    $ every 2 (slow 2) $ n (scale dascale (melo - 12) + root) # s "chord"
    # amp rand
    # s "PISTON"

hush




--------------------------------------------------------------------------------
------------------------------------------------------------------------------11 
-- BREAKBEAT
d3 $ every 8 (|+ n 5) $ n "f3'min*16"
  # amp rand
  # s "mydevice"

-- very paddy!!
d1 $ segment 16 $ every 2 (rev . (\x -> (x |+ n "<12 -12>"))) 
  $ linger 0.75 . fastGap 2
  $ n "~ <~@2 f3!2> [ds4|cs4|gs4]"
  # s "piston"
  # amp rand

-- short hits/stabs
d2 $ segment 16 $ fastGap 2 $ every 2 (rev . (\x -> (x |+ n "<12 -12>"))) 
  $ linger 0.75 . fastGap 2
  $ n "~ ~*2 [ds3|cs3|gs4]"
  # s "furthrrr"
  # amp rand

hush




--------------------------------------------------------------------------------
------------------------------------------------------------------------------12 

-- d2 $ swingBy 0.1 8 $ segment 16 
--   $ n ("~ gs3!2 f3 . f3 <gs3 f3> . <gs3!3 gs3>" - 24)
--   # s "FURTHRRR"
--   # amp perlin

d2 $ swingBy 0.1 8 $ rev $ struct "t(7,16)" 
  $ n ("~ gs3!2 f3 . f3 <gs3 f3> . <gs3!3 gs3>" - 12)
  # s "mydevice"
  # amp perlin

d1 $ swingBy 0.1 8 $ rev $ struct "t(7,16)" 
  $ n ("~ gs3!2 f3 . f3 <gs5 f5> . <gs4!3 gs3>" - "<24 12>")
  # s "PISTON HONDA"
  # amp perlin

d3 $ n "f3'min ~@2 f3'min ~ ~*2@3"
  # amp 1
  # s "chord"
  # nudge (chooseBy "0 0.25 0.5 1" [0.15, 0.12, 0.13])

hush




--------------------------------------------------------------------------------
------------------------------------------------------------------------------13
d1 $ fast 4 
  $ n ((cat [scale "minor" "~@3 <c4 gs3 f4> ~ gs3", "<c3 f3>*2"]) |+ 0)
  # s "PISTON"
  # amp rand

d2 $ fast 4 
  $ n ((cat [scale "minor" "~@3 <c4 gs3 f4> ~ gs3", "<c3 f3>*2"]) |+ 0)
  # s "FURTHRRR"
  # amp rand


d3 $ n "f3'min ~ f3'min <f3'min9*2 f3'min9*2 f3'min9*2 f3'min9*4> ~@4"
  # amp rand
  # s "mydevice"

hush




--------------------------------------------------------------------------------
--------------------------------------------------------------------------CLOSER
-- short
d1 $ swingBy 0.1 8 $ segment 16 $ every 2 (rev . (\x -> (x |+ n "<-24 -12>"))) 
  $ linger 0.75 . fastGap 2
  $ n ("~ f4*2 [ds3|~|gs4]" - "[12|0]")
  # s "piston"
  # amp rand

-- pad
d2 $ swingBy 0.1 8 $ segment 16 $ every 2 (rev . (\x -> (x |+ n "<12 24>"))) 
  $ linger 0.75 . fastGap 2
  $ n "~ f3*2 [ds2|c4|gs4]"
  # s "furthrrr"
  # amp rand

d3 $ swingBy 0.1 8 $ every 8 (|+ n 5) $ n "f3'min*16"
  # amp rand
  # s "mydevice"

hush

